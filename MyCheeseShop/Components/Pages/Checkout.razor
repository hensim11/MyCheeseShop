@page "/checkout"
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using MyCheeseShop.Context
@using MyCheeseShop.Model
@using MyCheeseShop.Components.Shared
@inject UserProvider UserProvider
@inject OrderProvider OrderProvider
@inject ShoppingCart ShoppingCart
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject ProtectedSessionStorage ProtectedSessionStore
@attribute [Authorize]


<h1 class="checkout-title">Checkout</h1>

<div class="row justify-content-start mb-4">
    <div class="col-lg-6 col-md-8 col-12 mt-1">
        <div class="order-summary">
            <h3 class="fs-4 text-center mb-3">Order Summary</h3>
            <CartSummary />
        </div>
    </div>
</div>



<EditForm EditContext="editContext" OnValidSubmit="MakePayment">
    <DataAnnotationsValidator />

    <div class="container my-5">
        <div class="row justify-content-start">
            <div class="col-lg-6 col-md-8">
                <div class="card shadow-sm border-0">
                    <div class="card-header bg-primary text-white text-center">
                        <h4>Customer Information</h4>
                    </div>
                    <div class="card-body">
                        <div class="form-group mb-3">
                            <label class="form-label">Name</label>
                            <input class="form-control" value="@GetFormattedName(user)" disabled />
                        </div>
                        <div class="form-group mb-3">
                            <label class="form-label">Address</label>
                            <input class="form-control" value="@GetFormattedAddress(user)" disabled />
                        </div>
                        <div class="form-group mb-3">
                            <label class="form-label">Email</label>
                            <input class="form-control" value="@user.Email" disabled />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="container my-5">
        <div class="row justify-content-center">
            <div class="col-lg-6 col-md-8">
                <div class="card shadow-sm border-0">
                    <div class="card-header bg-success text-white text-center">
                        <h4>Payment</h4>
                    </div>
                    <div class="card-body">
                        <div class="form-group mb-3">
                            <label class="form-label">Card Name</label>
                            <InputText class="form-control" placeholder="@GetFormattedName(user)" @bind-Value="paymentDetails.NameOnCard" />
                        </div>
                        <div class="form-group mb-3">
                            <label class="form-label">Card Number</label>
                            <InputText class="form-control" placeholder="0000-0000-0000-0000" @bind-Value="paymentDetails.CardNumber" />
                        </div>
                        <div class="form-group mb-3">
                            <label class="form-label">Expiry Date</label>
                            <InputText class="form-control" placeholder="MM/YY" @bind-Value="paymentDetails.ExpiryDate" />
                        </div>
                        <div class="form-group mb-3">
                            <label class="form-label">Security Code</label>
                            <InputText class="form-control" placeholder="123" @bind-Value="paymentDetails.SecurityCode" />
                        </div>
                        <div class="text-center">
                            <button type="submit" class="btn btn-success">
                                <span>Make Payment</span>
                                @if (isPaying)
                                {
                                    <span class="spinner-border spinner-border-sm ms-2" aria-hidden="true"></span>
                                }
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</EditForm>

<link rel="stylesheet" href="Checkout.css">









@code {
    private PaymentDetails paymentDetails;
    private User user;
    private bool isPaying;
    private EditContext editContext;

    private sealed class PaymentDetails
    {
        [Required]
        public string NameOnCard { get; set; }

        [Required]
        public string CardNumber { get; set; }

        [Required]
        public string ExpiryDate { get; set; }

        [Required]
        public string SecurityCode { get; set; }


    }

    protected override async Task OnInitializedAsync()
    {
        paymentDetails = new PaymentDetails();
        editContext = new EditContext(paymentDetails);
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var username = authState!.User!.Identity!.Name!;
        user = UserProvider.GetUserByUsername(username)!;
    }

    private async Task MakePayment()
    {
        await SimulatePayment();

        await OrderProvider.CreateOrder(user, ShoppingCart.GetItems());
        ShoppingCart.Clear();
        NavigationManager.NavigateTo("/thank-you");
    }

    private async Task SimulatePayment()
    {
        isPaying = true;
        StateHasChanged();
        await Task.Delay(1500);
        isPaying = false;
        StateHasChanged();
    }

    private string GetFormattedName(User user)
    {
        return $"{user.FirstName} {user.FirstName}";
    }

    private string GetFormattedAddress(User user)
    {
        return $"{user.Address}{Environment.NewLine}{user.City}{Environment.NewLine}{user.PostCode}";
    }

}
